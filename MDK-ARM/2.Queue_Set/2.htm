<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [2.Queue_Set\2.Queue_Set]</title></head>
<body><HR>
<H1>Static Call Graph for image 2.Queue_Set\2.Queue_Set</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6210000: Last Updated: Sat Jun  1 13:45:56 2024
<BR><P>
<H3>Maximum Stack Usage =        496 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short) &rArr; touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">SecureFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SecureFault_Handler</a><BR>
 <LI><a href="#[2f]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[8e]">StartDefaultTask</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">StartDefaultTask</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[344]">touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[344]">touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)</a><BR>
 <LI><a href="#[360]">touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[360]">touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2f]">ADC1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[77]">ADC4_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[76]">ADF1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32u5xx_it.o(.text.BusFault_Handler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[52]">COMP_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[81]">CORDIC_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[54]">CRS_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[30]">DAC1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[75]">DCACHE1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[7d]">DCMI_PSSI_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[7c]">DMA2D_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from stm32u5xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[16]">EXTI0_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[20]">EXTI10_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[21]">EXTI11_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[22]">EXTI12_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[23]">EXTI13_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[24]">EXTI14_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[25]">EXTI15_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[17]">EXTI1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[18]">EXTI2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[19]">EXTI3_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[1a]">EXTI4_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[1b]">EXTI5_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[1c]">EXTI6_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[1d]">EXTI7_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[1e]">EXTI8_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[1f]">EXTI9_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[31]">FDCAN1_IT0_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[32]">FDCAN1_IT1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[12]">FLASH_S_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[82]">FMAC_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[55]">FMC_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[68]">FPU_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[27]">GPDMA1_Channel0_IRQHandler</a> from stm32u5xx_it.o(.text.GPDMA1_Channel0_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[5c]">GPDMA1_Channel10_IRQHandler</a> from stm32u5xx_it.o(.text.GPDMA1_Channel10_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[5d]">GPDMA1_Channel11_IRQHandler</a> from stm32u5xx_it.o(.text.GPDMA1_Channel11_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[5e]">GPDMA1_Channel12_IRQHandler</a> from stm32u5xx_it.o(.text.GPDMA1_Channel12_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[5f]">GPDMA1_Channel13_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[60]">GPDMA1_Channel14_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[61]">GPDMA1_Channel15_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[28]">GPDMA1_Channel1_IRQHandler</a> from stm32u5xx_it.o(.text.GPDMA1_Channel1_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[29]">GPDMA1_Channel2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[2a]">GPDMA1_Channel3_IRQHandler</a> from stm32u5xx_it.o(.text.GPDMA1_Channel3_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[2b]">GPDMA1_Channel4_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[2c]">GPDMA1_Channel5_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[2d]">GPDMA1_Channel6_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[2e]">GPDMA1_Channel7_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[5a]">GPDMA1_Channel8_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[5b]">GPDMA1_Channel9_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[13]">GTZC_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[69]">HASH_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32u5xx_it.o(.text.HardFault_Handler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[42]">I2C1_ER_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[41]">I2C1_EV_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[44]">I2C2_ER_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[43]">I2C2_EV_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[63]">I2C3_ER_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[62]">I2C3_EV_IRQHandler</a> from stm32u5xx_it.o(.text.I2C3_EV_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[6c]">I2C4_ER_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[6d]">I2C4_EV_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[73]">ICACHE_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[26]">IWDG_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[78]">LPDMA1_Channel0_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[79]">LPDMA1_Channel1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[7a]">LPDMA1_Channel2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[7b]">LPDMA1_Channel3_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[4d]">LPTIM1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[4e]">LPTIM2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[6a]">LPTIM3_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[74]">LPTIM4_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[4c]">LPUART1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[83]">LSECSSD_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[6e]">MDF1_FLT0_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[6f]">MDF1_FLT1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[70]">MDF1_FLT2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[71]">MDF1_FLT3_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[7f]">MDF1_FLT4_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[80]">MDF1_FLT5_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32u5xx_it.o(.text.MemManage_Handler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32u5xx_it.o(.text.NMI_Handler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[56]">OCTOSPI1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[7e]">OCTOSPI2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[53]">OTG_FS_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[c]">PVD_PVM_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[57]">PWR_S3WU_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from portasm.o(.text.PendSV_Handler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[10]">RAMCFG_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[14]">RCC_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[15]">RCC_S_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[67]">RNG_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from stm32u5xx_it.o(.text.RTC_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[e]">RTC_S_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[64]">SAI1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[65]">SAI2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[58]">SDMMC1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[59]">SDMMC2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[45]">SPI1_IRQHandler</a> from stm32u5xx_it.o(.text.SPI1_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[46]">SPI2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[6b]">SPI3_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[89]">SPI_DMAAbortOnError</a> from stm32u5xx_hal_spi.o(.text.SPI_DMAAbortOnError) referenced 2 times from stm32u5xx_hal_spi.o(.text.HAL_SPI_IRQHandler)
 <LI><a href="#[8c]">SPI_DMAError</a> from stm32u5xx_hal_spi.o(.text.SPI_DMAError) referenced 2 times from stm32u5xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA)
 <LI><a href="#[8b]">SPI_DMAHalfTransmitCplt</a> from stm32u5xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) referenced 2 times from stm32u5xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA)
 <LI><a href="#[8a]">SPI_DMATransmitCplt</a> from stm32u5xx_hal_spi.o(.text.SPI_DMATransmitCplt) referenced 2 times from stm32u5xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA)
 <LI><a href="#[7]">SVC_Handler</a> from portasm.o(.text.SVC_Handler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[6]">SecureFault_Handler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[8e]">StartDefaultTask</a> from app_freertos.o(.text.StartDefaultTask) referenced 2 times from app_freertos.o(.text.MX_FREERTOS_Init)
 <LI><a href="#[a]">SysTick_Handler</a> from cmsis_os2.o(.text.SysTick_Handler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[84]">SystemInit</a> from system_stm32u5xx.o(.text.SystemInit) referenced from startup_stm32u575xx.o(.text)
 <LI><a href="#[f]">TAMP_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[4f]">TIM15_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[50]">TIM16_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[51]">TIM17_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[33]">TIM1_BRK_IRQHandler</a> from stm32u5xx_it.o(.text.TIM1_BRK_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[36]">TIM1_CC_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[35]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[34]">TIM1_UP_IRQHandler</a> from stm32u5xx_it.o(.text.TIM1_UP_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[37]">TIM2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[38]">TIM3_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[39]">TIM4_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[3a]">TIM5_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[3b]">TIM6_IRQHandler</a> from stm32u5xx_it.o(.text.TIM6_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[3c]">TIM7_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[3d]">TIM8_BRK_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[40]">TIM8_CC_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[3f]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[3e]">TIM8_UP_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[66]">TSC_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[4a]">UART4_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[4b]">UART5_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[8d]">UART_DMAAbortOnError</a> from stm32u5xx_hal_uart.o(.text.UART_DMAAbortOnError) referenced 2 times from stm32u5xx_hal_uart.o(.text.HAL_UART_IRQHandler)
 <LI><a href="#[72]">UCPD1_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[47]">USART1_IRQHandler</a> from stm32u5xx_it.o(.text.USART1_IRQHandler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[48]">USART2_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[49]">USART3_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32u5xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32u575xx.o(.text) referenced from startup_stm32u575xx.o(RESET)
 <LI><a href="#[1ea]">_GLOBAL__sub_I_TouchGFXConfiguration.cpp</a> from touchgfxconfiguration.o(.text._GLOBAL__sub_I_TouchGFXConfiguration.cpp) referenced from touchgfxconfiguration.o(.init_array)
 <LI><a href="#[1eb]">_GLOBAL__sub_I_typedtextdatabase.cpp</a> from typedtextdatabase.o(.text._GLOBAL__sub_I_typedtextdatabase.cpp) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[98]">Screen1View::setupScreen()</a> from screen1view.o(.text._ZN11Screen1View11setupScreenEv) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[9a]">Screen1View::tearDownScreen()</a> from screen1view.o(.text._ZN11Screen1View14tearDownScreenEv) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[96]">Screen1View::~Screen1View__deallocating()</a> from screen1view.o(.text._ZN11Screen1ViewD0Ev) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[a4]">TouchGFXHAL::initialize()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL10initializeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[be]">TouchGFXHAL::enableInterrupts()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16enableInterruptsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a7]">TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a6]">TouchGFXHAL::flushFrameBuffer()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[bf]">TouchGFXHAL::disableInterrupts()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL17disableInterruptsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ce]">TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL17setTFTFrameBufferEPt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[bd]">TouchGFXHAL::configureInterrupts()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL19configureInterruptsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c0]">TouchGFXHAL::enableLCDControllerInterrupt()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL28enableLCDControllerInterruptEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ad]">TouchGFXHAL::blockCopy(void*, void const*, unsigned int)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL9blockCopyEPvPKvj) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a1]">TouchGFXHAL::~TouchGFXHAL__deallocating()</a> from touchgfxhal.o(.text._ZN11TouchGFXHALD0Ev) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d4]">FrontendHeap::~FrontendHeap__deallocating()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[92]">FrontendHeap::~FrontendHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[92]">FrontendHeap::~FrontendHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev) referenced 2 times from touchgfxconfiguration.o(.text.touchgfx_init)
 <LI><a href="#[d7]">Screen1ViewBase::setupScreen()</a> from screen1viewbase.o(.text._ZN15Screen1ViewBase11setupScreenEv) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[d6]">Screen1ViewBase::~Screen1ViewBase__deallocating()</a> from screen1viewbase.o(.text._ZN15Screen1ViewBaseD0Ev) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[95]">Screen1ViewBase::~Screen1ViewBase__sub_object()</a> from screen1viewbase.o(.text._ZN15Screen1ViewBaseD2Ev) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[95]">Screen1ViewBase::~Screen1ViewBase__sub_object()</a> from screen1viewbase.o(.text._ZN15Screen1ViewBaseD2Ev) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[d5]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[da]">Screen1Presenter::deactivate()</a> from screen1presenter.o(.text._ZN16Screen1Presenter10deactivateEv) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[d9]">Screen1Presenter::activate()</a> from screen1presenter.o(.text._ZN16Screen1Presenter8activateEv) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[dc]">Screen1Presenter::~Screen1Presenter__deallocating()</a> from screen1presenter.o(.text._ZN16Screen1PresenterD0Ev) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[db]">Screen1Presenter::~Screen1Presenter__sub_object()</a> from screen1presenter.o(.text._ZN16Screen1PresenterD2Ev) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[e3]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(.text._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[e6]">FrontendApplication::~FrontendApplication__deallocating()</a> from frontendapplication.o(.text._ZN19FrontendApplicationD0Ev) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[f5]">STM32TouchController::sampleTouch(int&, int&)</a> from stm32touchcontroller.o(.text._ZN20STM32TouchController11sampleTouchERiS0_) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[f4]">STM32TouchController::init()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchController4initEv) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[f3]">STM32TouchController::~STM32TouchController__deallocating()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchControllerD0Ev) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[f6]">ApplicationFontProvider::getFont(unsigned short)</a> from applicationfontprovider.o(.text._ZN23ApplicationFontProvider7getFontEt) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[f8]">ApplicationFontProvider::~ApplicationFontProvider__deallocating()</a> from applicationfontprovider.o(.text._ZN23ApplicationFontProviderD0Ev) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[e7]">FrontendApplicationBase::changeToStartScreen()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBase19changeToStartScreenEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[e7]">FrontendApplicationBase::changeToStartScreen()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBase19changeToStartScreenEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[90]">FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</a> from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv) referenced 2 times from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv)
 <LI><a href="#[fa]">FrontendApplicationBase::~FrontendApplicationBase__deallocating()</a> from frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[e5]">FrontendApplicationBase::~FrontendApplicationBase__sub_object()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBaseD2Ev) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[e5]">FrontendApplicationBase::~FrontendApplicationBase__sub_object()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBaseD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[fc]">touchgfx::ClickEvent::~ClickEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx10ClickEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[109]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[10a]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[108]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[107]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[104]">touchgfx::Transition::~Transition__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[ee]">touchgfx::Application::invalidate()</a> from application.o(.text._ZN8touchgfx11Application10invalidateEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[ee]">touchgfx::Application::invalidate()</a> from application.o(.text._ZN8touchgfx11Application10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[ee]">touchgfx::Application::invalidate()</a> from application.o(.text._ZN8touchgfx11Application10invalidateEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[e8]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[e8]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[e8]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[eb]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from frontendapplication.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[eb]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from frontendapplication.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[eb]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from frontendapplication.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[ea]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[ea]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[ea]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[e2]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[e2]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[e2]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[ef]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(.text._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[ef]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(.text._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[ef]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(.text._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[e9]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from frontendapplication.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[e9]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from frontendapplication.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[e9]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from frontendapplication.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[ed]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[ed]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[ed]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[e0]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[e0]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[e0]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f9]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[f9]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[ec]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[ec]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[ec]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[df]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[df]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[df]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[e1]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[e1]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[e1]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[101]">touchgfx::Application::changeToStartScreen()</a> from application.o(.text._ZN8touchgfx11Application19changeToStartScreenEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[fe]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(.text._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f1]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[f1]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[f1]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f0]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[f0]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[f0]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[100]">touchgfx::Application::~Application__deallocating()</a> from application.o(.text._ZN8touchgfx11ApplicationD0Ev) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f7]">touchgfx::FontProvider::~FontProvider__sub_object()</a> from applicationfontprovider.o(.text._ZN8touchgfx12FontProviderD2Ev) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[102]">touchgfx::GestureEvent::~GestureEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx12GestureEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[106]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[105]">touchgfx::NoTransition::~NoTransition__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[125]">touchgfx::ToggleButton::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)</a> from togglebutton.o(.text._ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[11c]">touchgfx::ToggleButton::handleClickEvent(touchgfx::ClickEvent const&)</a> from togglebutton.o(.text._ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[10c]">touchgfx::ToggleButton::~ToggleButton__deallocating()</a> from togglebutton.o(.text._ZN8touchgfx12ToggleButtonD0Ev) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[153]">touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[158]">touchgfx::DMA_Interface::getDMAType()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx13DMA_Interface10getDMATypeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[155]">touchgfx::DMA_Interface::initialize()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx13DMA_Interface10initializeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[160]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[161]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[15d]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[15c]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[163]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[162]">touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[156]">touchgfx::DMA_Interface::start()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5startEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[15b]">touchgfx::DMA_Interface::execute()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[127]">touchgfx::GeneratedFont::~GeneratedFont__deallocating()</a> from generatedfont.o(.text._ZN8touchgfx13GeneratedFontD0Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[123]">touchgfx::AbstractButton::executeAction()</a> from button.o(.text._ZN8touchgfx14AbstractButton13executeActionEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[e4]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[e4]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[167]">touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvED2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[f2]">touchgfx::TouchController::~TouchController__sub_object()</a> from stm32touchcontroller.o(.text._ZN8touchgfx15TouchControllerD2Ev) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[ff]">touchgfx::UIEventListener::~UIEventListener__sub_object()</a> from application.o(.text._ZN8touchgfx15UIEventListenerD2Ev) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[141]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[141]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[141]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[141]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[144]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[144]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[144]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[144]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[143]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[143]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[143]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[143]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[140]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[140]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[140]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[140]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[13f]">touchgfx::AbstractPartition::~AbstractPartition__deallocating()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD0Ev) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[13e]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[13e]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[13e]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[13e]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[148]">touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[14b]">touchgfx::LockFreeDMA_Queue::pop()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue3popEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[14c]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[147]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[146]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[14a]">touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD0Ev) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[14d]">touchgfx::Box::~Box__deallocating()</a> from box.o(.text._ZN8touchgfx3BoxD0Ev) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[d3]">touchgfx::HAL::FlushCache()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL10FlushCacheEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[cc]">touchgfx::HAL::beginFrame()</a> from hal.o(.text._ZN8touchgfx3HAL10beginFrameEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c8]">touchgfx::HAL::getDMAType()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ae]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b2]">touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b3]">touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b5]">touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d2]">touchgfx::HAL::InvalidateCache()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[bc]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[aa]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b4]">touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a8]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c7]">touchgfx::HAL::getTFTCurrentLine()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ab]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a3]">touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c3]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ba]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[bb]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b9]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a2]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b7]">touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c4]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c9]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ca]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c2]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d1]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[cb]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[cf]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d0]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[af]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b1]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b0]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b8]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b6]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[cd]">touchgfx::HAL::endFrame()</a> from hal.o(.text._ZN8touchgfx3HAL8endFrameEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a9]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c1]">touchgfx::HAL::sampleKey(unsigned char&)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c6]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a5]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a0]">touchgfx::HAL::~HAL__sub_object()</a> from touchgfxhal.o(.text._ZN8touchgfx3HALD2Ev) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[1bf]">touchgfx::LCD::setDefaultColor(touchgfx::colortype)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1c1]">touchgfx::LCD::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(.text._ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1c3]">touchgfx::LCD::drawTextureMapScanLine(touchgfx::DrawingSurface const&, touchgfx::Gradients const&, touchgfx::Edge const*, touchgfx::Edge const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1c0]">touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[178]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1be]">touchgfx::LCD::supportDynamicBitmapDrawing(touchgfx::Bitmap::BitmapFormat)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1b1]">touchgfx::LCD::~LCD__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCDD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[126]">touchgfx::Font::~Font__sub_object()</a> from cachedfont.o(.text._ZN8touchgfx4FontD2Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[126]">touchgfx::Font::~Font__sub_object()</a> from cachedfont.o(.text._ZN8touchgfx4FontD2Ev) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[fb]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[fb]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[fb]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[152]">touchgfx::NoDMA::getBlitCaps()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA11getBlitCapsEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[15e]">touchgfx::NoDMA::setupDataCopy(touchgfx::BlitOp const&)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA13setupDataCopyERKNS_6BlitOpE) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[15f]">touchgfx::NoDMA::setupDataFill(touchgfx::BlitOp const&)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA13setupDataFillERKNS_6BlitOpE) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[157]">touchgfx::NoDMA::signalDMAInterrupt()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA18signalDMAInterruptEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[154]">touchgfx::NoDMA::flush()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA5flushEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[15a]">touchgfx::NoDMA::~NoDMA__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMAD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[159]">touchgfx::NoDMA::~NoDMA__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMAD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
 <LI><a href="#[166]">touchgfx::Screen::setupScreen()</a> from screen.o(.text._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[9f]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen1view.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[9f]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen1view.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[9f]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen1view.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[d8]">touchgfx::Screen::tearDownScreen()</a> from screen1viewbase.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[d8]">touchgfx::Screen::tearDownScreen()</a> from screen1viewbase.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[99]">touchgfx::Screen::afterTransition()</a> from screen1view.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[99]">touchgfx::Screen::afterTransition()</a> from screen1view.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[99]">touchgfx::Screen::afterTransition()</a> from screen1view.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[9c]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[9c]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[9c]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[9e]">touchgfx::Screen::handleTickEvent()</a> from screen1view.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[9e]">touchgfx::Screen::handleTickEvent()</a> from screen1view.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[9e]">touchgfx::Screen::handleTickEvent()</a> from screen1view.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[9b]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[9b]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[9b]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[9d]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[9d]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[9d]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[97]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[97]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[97]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[165]">touchgfx::Screen::~Screen__deallocating()</a> from screen.o(.text._ZN8touchgfx6ScreenD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[164]">touchgfx::Screen::~Screen__sub_object()</a> from screen.o(.text._ZN8touchgfx6ScreenD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[114]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[114]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[169]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[168]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[120]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[120]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[120]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[112]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[112]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[122]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[122]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[11e]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from box.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[11e]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from box.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[11e]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from box.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[11f]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[11f]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[11f]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[151]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from box.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[151]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from box.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[11d]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from box.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[11d]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from box.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[11d]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from box.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[11b]">touchgfx::Drawable::childGeometryChanged()</a> from box.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[11b]">touchgfx::Drawable::childGeometryChanged()</a> from box.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[11b]">touchgfx::Drawable::childGeometryChanged()</a> from box.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[113]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[113]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[113]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[117]">touchgfx::Drawable::setX(short)</a> from box.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[117]">touchgfx::Drawable::setX(short)</a> from box.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[117]">touchgfx::Drawable::setX(short)</a> from box.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[118]">touchgfx::Drawable::setY(short)</a> from box.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[118]">touchgfx::Drawable::setY(short)</a> from box.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[118]">touchgfx::Drawable::setY(short)</a> from box.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[121]">touchgfx::Drawable::moveTo(short, short)</a> from box.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[121]">touchgfx::Drawable::moveTo(short, short)</a> from box.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[121]">touchgfx::Drawable::moveTo(short, short)</a> from box.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[119]">touchgfx::Drawable::setWidth(short)</a> from box.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[119]">touchgfx::Drawable::setWidth(short)</a> from box.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[119]">touchgfx::Drawable::setWidth(short)</a> from box.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[11a]">touchgfx::Drawable::setHeight(short)</a> from box.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[11a]">touchgfx::Drawable::setHeight(short)</a> from box.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[11a]">touchgfx::Drawable::setHeight(short)</a> from box.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[10b]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[10b]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[10b]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1ba]">touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[16d]">touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[16f]">touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[16e]">touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[16c]">touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[1b3]">touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[16b]">touchgfx::LCD16bpp::DecompressorL8Base::~DecompressorL8Base__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8BaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[16b]">touchgfx::LCD16bpp::DecompressorL8Base::~DecompressorL8Base__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8BaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[16b]">touchgfx::LCD16bpp::DecompressorL8Base::~DecompressorL8Base__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8BaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[171]">touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[173]">touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[172]">touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[170]">touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[175]">touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[177]">touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[176]">touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[174]">touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[1c2]">touchgfx::LCD16bpp::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1b8]">touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(touchgfx::Rect const&)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1b7]">touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1b6]">touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[17a]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[179]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[17c]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[17b]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[17e]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[17d]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[180]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[17f]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[182]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[181]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[184]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[183]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[186]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[185]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[188]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[187]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[18a]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[189]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[18c]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[18b]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[18e]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[18d]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[190]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[18f]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[192]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[191]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[194]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[193]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[196]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[195]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[198]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[197]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[19a]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[199]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[19c]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[19b]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[19e]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[19d]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[1a0]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[19f]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[1a2]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[1a1]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[1a4]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[1a3]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[1a6]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1a5]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1a8]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1a7]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1aa]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1a9]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1ac]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1ab]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1ae]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[1ad]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[1b0]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1af]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1b5]">touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1b4]">touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1b9]">touchgfx::LCD16bpp::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1c4]">touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1b2]">touchgfx::LCD16bpp::~LCD16bpp__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bppD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1c5]">touchgfx::ConstFont::~ConstFont__deallocating()</a> from constfont.o(.text._ZN8touchgfx9ConstFontD0Ev) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1d6]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1cd]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1cc]">touchgfx::Container::getFirstChild()</a> from container.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1ce]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d5]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d8]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1cf]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d4]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d0]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d2]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d3]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d1]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1c8]">touchgfx::Container::~Container__deallocating()</a> from container.o(.text._ZN8touchgfx9ContainerD0Ev) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[149]">touchgfx::DMA_Queue::~DMA_Queue__sub_object()</a> from dma.o(.text._ZN8touchgfx9DMA_QueueD2Ev) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1d9]">touchgfx::DragEvent::~DragEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx9DragEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[1dd]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1de]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1db]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e2]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e3]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e0]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e7]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e8]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e5]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[ac]">TouchGFXHAL::getTFTFrameBuffer() const</a> from touchgfxhal.o(.text._ZNK11TouchGFXHAL17getTFTFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[fd]">touchgfx::ClickEvent::getEventType() const</a> from screen.o(.text._ZNK8touchgfx10ClickEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[103]">touchgfx::GestureEvent::getEventType() const</a> from screen.o(.text._ZNK8touchgfx12GestureEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[137]">touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[139]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[13d]">touchgfx::GeneratedFont::getPixelData(touchgfx::GlyphNode const*) const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[13a]">touchgfx::GeneratedFont::getContextualFormsTable() const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[124]">touchgfx::AbstractButton::getPressedState() const</a> from button.o(.text._ZNK8touchgfx14AbstractButton15getPressedStateEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[142]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[142]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[142]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[142]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[14f]">touchgfx::Box::getSolidRect() const</a> from box.o(.text._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[150]">touchgfx::Box::invalidateContent() const</a> from box.o(.text._ZNK8touchgfx3Box17invalidateContentEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[14e]">touchgfx::Box::draw(touchgfx::Rect const&) const</a> from box.o(.text._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[c5]">touchgfx::HAL::getFlashDataReader() const</a> from touchgfxhal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[132]">touchgfx::Font::getBaseline() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font11getBaselineEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[132]">touchgfx::Font::getBaseline() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font11getBaselineEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[12e]">touchgfx::Font::getCharWidth(unsigned short) const</a> from font.o(.text._ZNK8touchgfx4Font12getCharWidthEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[12e]">touchgfx::Font::getCharWidth(unsigned short) const</a> from font.o(.text._ZNK8touchgfx4Font12getCharWidthEt) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1c6]">touchgfx::Font::getGSUBTable() const</a> from texts.o(.text._ZNK8touchgfx4Font12getGSUBTableEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[131]">touchgfx::Font::getFontHeight() const</a> from font.o(.text._ZNK8touchgfx4Font13getFontHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[131]">touchgfx::Font::getFontHeight() const</a> from font.o(.text._ZNK8touchgfx4Font13getFontHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[13c]">touchgfx::Font::getScaleFactor() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font14getScaleFactorEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[13c]">touchgfx::Font::getScaleFactor() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font14getScaleFactorEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[12c]">touchgfx::Font::getStringWidth(unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[12c]">touchgfx::Font::getStringWidth(unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[12d]">touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[12d]">touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[135]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[135]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[136]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[136]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[12b]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[12b]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[12a]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[12a]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[12f]">touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[12f]">touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[130]">touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[130]">touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[138]">touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[138]">touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[13b]">touchgfx::Font::isVectorBasedFont() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font17isVectorBasedFontEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[13b]">touchgfx::Font::isVectorBasedFont() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font17isVectorBasedFontEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[133]">touchgfx::Font::getMinimumTextHeight() const</a> from font.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[133]">touchgfx::Font::getMinimumTextHeight() const</a> from font.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1c7]">touchgfx::Font::getContextualFormsTable() const</a> from texts.o(.text._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[129]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(.text._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[129]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(.text._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[134]">touchgfx::Font::getHeight() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font9getHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[134]">touchgfx::Font::getHeight() const</a> from cachedfont.o(.text._ZNK8touchgfx4Font9getHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[10e]">touchgfx::Button::getSolidRect() const</a> from button.o(.text._ZNK8touchgfx6Button12getSolidRectEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[111]">touchgfx::Button::invalidateContent() const</a> from button.o(.text._ZNK8touchgfx6Button17invalidateContentEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[10d]">touchgfx::Button::draw(touchgfx::Rect const&) const</a> from button.o(.text._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[16a]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(.text._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[110]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[110]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[110]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[115]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[115]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[115]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[10f]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[10f]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[10f]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1cb]">touchgfx::Drawable::invalidateContent() const</a> from container.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[116]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[116]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[116]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1bc]">touchgfx::LCD16bpp::framebufferFormat() const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferFormatEv) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1bd]">touchgfx::LCD16bpp::framebufferStride() const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferStrideEv) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1bb]">touchgfx::LCD16bpp::bitDepth() const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp8bitDepthEv) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[128]">touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</a> from constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[128]">touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</a> from constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1ca]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d7]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1c9]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1da]">touchgfx::DragEvent::getEventType() const</a> from screen.o(.text._ZNK8touchgfx9DragEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[1df]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1dc]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e4]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e1]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e9]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1e6]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[de]">non-virtual thunk to Screen1Presenter::~Screen1Presenter__deallocating()</a> from screen1presenter.o(.text._ZThn4_N16Screen1PresenterD0Ev) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[dd]">non-virtual thunk to Screen1Presenter::~Screen1Presenter()</a> from screen1presenter.o(.text._ZThn4_N16Screen1PresenterD1Ev) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[145]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[145]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[85]">__main</a> from __main.o(!!!main) referenced from startup_stm32u575xx.o(.text)
 <LI><a href="#[88]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[87]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[86]">_sputc</a> from _sputc.o(.text) referenced from vsprintf.o(.text)
 <LI><a href="#[93]">prvIdleTask</a> from tasks.o(.text.prvIdleTask) referenced 2 times from tasks.o(.text.vTaskStartScheduler)
 <LI><a href="#[91]">prvTaskExitError</a> from port.o(.text.prvTaskExitError) referenced 2 times from port.o(.text.pxPortInitialiseStack)
 <LI><a href="#[94]">prvTimerTask</a> from timers.o(.text.prvTimerTask) referenced 2 times from timers.o(.text.xTimerCreateTimerTask)
 <LI><a href="#[8f]">vPortSVCHandler_C</a> from port.o(.text.vPortSVCHandler_C) referenced from portasm.o(.text.SVC_Handler)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[85]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(.text)
</UL>
<P><STRONG><a name="[1ee]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1f0]"></a>__scatterload_rt2</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[3d0]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3d1]"></a>__scatterload_loop</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3d2]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[3d3]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[3d4]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, __scatter.o(!!handler_null), UNUSED)

<P><STRONG><a name="[3d5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[1f1]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[247]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1f3]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[1f5]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[1f7]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[1f8]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[1f9]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[3d6]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[1fb]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1fd]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1fe]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1ff]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[201]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[203]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[205]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[206]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[207]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[209]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[3d7]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[20b]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[20d]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[20f]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[211]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[3d8]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[222]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[213]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[215]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000007))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[3d9]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[3da]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[3db]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[217]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[3dc]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[3dd]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[3de]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[219]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[3df]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[3e0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[21a]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000018))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[3e1]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[3e2]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[3e3]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[3e4]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[21c]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[3e5]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[3e6]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[3e7]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[3e8]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[3e9]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[3ea]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[3eb]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[3ec]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[3ed]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[227]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[21d]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[3ee]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[3ef]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[3f0]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[3f1]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[3f2]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[3f3]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[3f4]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[1ef]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[3f5]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[21f]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[221]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[3f6]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[223]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; LCD_drawImage &rArr; LCD_SetWindow &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3f7]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[260]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[226]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[3f8]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[228]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SecureFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>ADF1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>CORDIC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DAC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DCACHE1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DCMI_PSSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTI15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>FMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPDMA1_Channel13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>GPDMA1_Channel14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>GPDMA1_Channel15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPDMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>GPDMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>GPDMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>GPDMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>GPDMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>GPDMA1_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>GPDMA1_Channel9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GTZC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>HASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>ICACHE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>IWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>LPDMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>LPDMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>LPDMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>LPDMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>LSECSSD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>MDF1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>MDF1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>MDF1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>MDF1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>MDF1_FLT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>MDF1_FLT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OCTOSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>OCTOSPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>PWR_S3WU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RAMCFG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RCC_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>UCPD1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[25f]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_stm32u575xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[300]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[3f9]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>vsprintf</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, vsprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Printf
</UL>

<P><STRONG><a name="[22c]"></a>__cxa_atexit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[22e]"></a>__aeabi_assert</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, assert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::indexOf(void const*)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::allocate(unsigned short)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::execute()
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoDMA::setupDataFill(touchgfx::BlitOp const&)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoDMA::setupDataCopy(touchgfx::BlitOp const&)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::switchScreen(touchgfx::Screen*)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pop()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(touchgfx::Rect const&) const
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char) const
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::framebufferStride() const
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[3fa]"></a>__assert</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, assert.o(.text), UNUSED)

<P><STRONG><a name="[355]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[231]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3fb]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[3fc]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3fd]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3fe]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[233]"></a>__aeabi_memset4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memset4 &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[3ff]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_memset4.o(.text), UNUSED)

<P><STRONG><a name="[362]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
</UL>

<P><STRONG><a name="[400]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[2fc]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[266]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[401]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>

<P><STRONG><a name="[402]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[403]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[404]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[236]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[239]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[23b]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[23c]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[23d]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[23e]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[23a]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[1fc]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[1f2]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[22b]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>

<P><STRONG><a name="[86]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vsprintf.o(.text)
</UL>
<P><STRONG><a name="[241]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[204]"></a>_printf_longlong_dec</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[244]"></a>_printf_longlong_oct</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[200]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[208]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[245]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[202]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[20a]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[1f4]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[240]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[230]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[22d]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>

<P><STRONG><a name="[22f]"></a>__assert_puts</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, assert_puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __assert_puts &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[24a]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[229]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[237]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[249]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[405]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[406]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[407]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[408]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[24c]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[216]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[24e]"></a>__Heap_Initialize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[409]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[243]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[23f]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>

<P><STRONG><a name="[254]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[257]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[258]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[20c]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[20e]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[259]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[210]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[212]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[25a]"></a>_c16rtomb</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, _c16rtomb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[242]"></a>_wcrtomb</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, _c16rtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[21e]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[248]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[40a]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[25e]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[40b]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[40c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[40d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[40e]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[220]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[25b]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_c16rtomb
</UL>

<P><STRONG><a name="[218]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[24b]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[40f]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[250]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[225]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[25d]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[25c]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[24d]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[261]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[262]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[3cf]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv8m_maindsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[32a]"></a>CRC_Lock</STRONG> (Thumb, 316 bytes, Stack size 8 bytes, stm32_crc_lock.o(.text.CRC_Lock), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[268]"></a>Error_Handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(.text.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_drawImage
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ICACHE_Init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_initReg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
</UL>

<P><STRONG><a name="[27]"></a>GPDMA1_Channel0_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.GPDMA1_Channel0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA1_Channel0_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>GPDMA1_Channel10_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.GPDMA1_Channel10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA1_Channel10_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GPDMA1_Channel11_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.GPDMA1_Channel11_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA1_Channel11_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>GPDMA1_Channel12_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.GPDMA1_Channel12_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA1_Channel12_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPDMA1_Channel1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.GPDMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA1_Channel1_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPDMA1_Channel3_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.GPDMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA1_Channel3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[264]"></a>HAL_ADC_Init</STRONG> (Thumb, 1002 bytes, Stack size 32 bytes, stm32u5xx_hal_adc.o(.text.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[265]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 140 bytes, Stack size 240 bytes, adc.o(.text.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[26c]"></a>HAL_CRCEx_Polynomial_Set</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, stm32u5xx_hal_crc_ex.o(.text.HAL_CRCEx_Polynomial_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[26a]"></a>HAL_CRC_Init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, stm32u5xx_hal_crc.o(.text.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[26b]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, crc.o(.text.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[2d7]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 172 bytes, Stack size 20 bytes, stm32u5xx_hal_dma2d.o(.text.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[26d]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, stm32u5xx_hal_dma2d.o(.text.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[26e]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, dma2d.o(.text.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[2a6]"></a>HAL_DMAEx_ConfigRepeatBlock</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, stm32u5xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigRepeatBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMAEx_ConfigRepeatBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[2aa]"></a>HAL_DMAEx_List_Start_IT</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, stm32u5xx_hal_dma_ex.o(.text.HAL_DMAEx_List_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMAEx_List_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
</UL>

<P><STRONG><a name="[26f]"></a>HAL_DMA_Abort</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, stm32u5xx_hal_dma.o(.text.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2a1]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32u5xx_hal_dma.o(.text.HAL_DMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[27a]"></a>HAL_DMA_ConfigChannelAttributes</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stm32u5xx_hal_dma.o(.text.HAL_DMA_ConfigChannelAttributes))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>

<P><STRONG><a name="[2f6]"></a>HAL_DMA_GetError</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32u5xx_hal_dma.o(.text.HAL_DMA_GetError))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
</UL>

<P><STRONG><a name="[2d1]"></a>HAL_DMA_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32u5xx_hal_dma.o(.text.HAL_DMA_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_drawImage
</UL>

<P><STRONG><a name="[263]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 430 bytes, Stack size 8 bytes, stm32u5xx_hal_dma.o(.text.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA1_Channel12_IRQHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA1_Channel11_IRQHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA1_Channel10_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA1_Channel3_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA1_Channel1_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA1_Channel0_IRQHandler
</UL>

<P><STRONG><a name="[271]"></a>HAL_DMA_Init</STRONG> (Thumb, 1418 bytes, Stack size 16 bytes, stm32u5xx_hal_dma.o(.text.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>

<P><STRONG><a name="[2a9]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, stm32u5xx_hal_dma.o(.text.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
</UL>

<P><STRONG><a name="[272]"></a>HAL_Delay</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32u5xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_drawImage
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_init
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_initReg
</UL>

<P><STRONG><a name="[269]"></a>HAL_GPIO_Init</STRONG> (Thumb, 594 bytes, Stack size 44 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[2ab]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_drawImage
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_initReg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
</UL>

<P><STRONG><a name="[270]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_SetWakeUpTimer_IT
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[2dd]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, stm32u5xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
</UL>

<P><STRONG><a name="[2de]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, stm32u5xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigDigitalFilter))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
</UL>

<P><STRONG><a name="[2e0]"></a>HAL_I2CEx_ConfigFastModePlus</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32u5xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigFastModePlus))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
</UL>

<P><STRONG><a name="[2ce]"></a>HAL_I2C_EV_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32u5xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_EV_IRQHandler
</UL>

<P><STRONG><a name="[273]"></a>HAL_I2C_Init</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32u5xx_hal_i2c.o(.text.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
</UL>

<P><STRONG><a name="[275]"></a>HAL_I2C_Master_Transmit</STRONG> (Thumb, 422 bytes, Stack size 40 bytes, stm32u5xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_I2C_Master_Transmit &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>

<P><STRONG><a name="[274]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 448 bytes, Stack size 240 bytes, i2c.o(.text.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_ConfigChannelAttributes
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[2e2]"></a>HAL_ICACHE_ConfigAssociativityMode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32u5xx_hal_icache.o(.text.HAL_ICACHE_ConfigAssociativityMode))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ICACHE_Init
</UL>

<P><STRONG><a name="[2e3]"></a>HAL_ICACHE_Enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32u5xx_hal_icache.o(.text.HAL_ICACHE_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ICACHE_Init
</UL>

<P><STRONG><a name="[2c2]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32u5xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[27d]"></a>HAL_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32u5xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[281]"></a>HAL_InitTick</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, stm32u5xx_hal_timebase_tim.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[282]"></a>HAL_MspInit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32u5xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableVddA
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[27c]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32u5xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPDMA1_Init
</UL>

<P><STRONG><a name="[27b]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32u5xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPDMA1_Init
</UL>

<P><STRONG><a name="[27e]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32u5xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[399]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigSupply))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2fd]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 250 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[398]"></a>HAL_PWREx_DisableUCPDDeadBattery</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUCPDDeadBattery))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[287]"></a>HAL_PWREx_EnableVddA</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableVddA))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[397]"></a>HAL_PWREx_EnableVddIO2</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableVddIO2))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[293]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[2fe]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[28e]"></a>HAL_RCCEx_GetPLL1ClockFreq</STRONG> (Thumb, 400 bytes, Stack size 16 bytes, stm32u5xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL1ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCCEx_GetPLL1ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[289]"></a>HAL_RCCEx_GetPLL2ClockFreq</STRONG> (Thumb, 400 bytes, Stack size 16 bytes, stm32u5xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL2ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCCEx_GetPLL2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[28d]"></a>HAL_RCCEx_GetPLL3ClockFreq</STRONG> (Thumb, 400 bytes, Stack size 16 bytes, stm32u5xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPLL3ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCCEx_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[288]"></a>HAL_RCCEx_GetPeriphCLKFreq</STRONG> (Thumb, 2258 bytes, Stack size 24 bytes, stm32u5xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCCEx_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK3Freq
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL1ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[267]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 1594 bytes, Stack size 40 bytes, stm32u5xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[291]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 762 bytes, Stack size 40 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[283]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[28a]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetHCLKFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[284]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[28c]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[28b]"></a>HAL_RCC_GetPCLK3Freq</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetPCLK3Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPCLK3Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[27f]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK3Freq
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[292]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 2970 bytes, Stack size 40 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2e5]"></a>HAL_RTCEx_PrivilegeModeSet</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stm32u5xx_hal_rtc_ex.o(.text.HAL_RTCEx_PrivilegeModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[294]"></a>HAL_RTCEx_SetWakeUpTimer_IT</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, stm32u5xx_hal_rtc_ex.o(.text.HAL_RTCEx_SetWakeUpTimer_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTCEx_SetWakeUpTimer_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[296]"></a>HAL_RTCEx_WakeUpTimerEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_rtc_ex.o(.text.HAL_RTCEx_WakeUpTimerEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerIRQHandler
</UL>

<P><STRONG><a name="[295]"></a>HAL_RTCEx_WakeUpTimerIRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32u5xx_hal_rtc_ex.o(.text.HAL_RTCEx_WakeUpTimerIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTCEx_WakeUpTimerIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[297]"></a>HAL_RTC_Init</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, stm32u5xx_hal_rtc.o(.text.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[298]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 128 bytes, Stack size 208 bytes, rtc.o(.text.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[29a]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, stm32u5xx_hal_rtc.o(.text.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_ExitInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[29b]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 418 bytes, Stack size 40 bytes, stm32u5xx_hal_rtc.o(.text.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_ExitInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[2e7]"></a>HAL_SPIEx_SetConfigAutonomousMode</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, stm32u5xx_hal_spi_ex.o(.text.HAL_SPIEx_SetConfigAutonomousMode))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[29f]"></a>HAL_SPI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_spi.o(.text.HAL_SPI_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAAbortOnError
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
</UL>

<P><STRONG><a name="[29c]"></a>HAL_SPI_IRQHandler</STRONG> (Thumb, 586 bytes, Stack size 16 bytes, stm32u5xx_hal_spi.o(.text.HAL_SPI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_SPI_IRQHandler &rArr; HAL_SPI_TxCpltCallback &rArr; HAL_SPI_Transmit_DMA &rArr; HAL_DMAEx_List_Start_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_SuspendCallback
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxCpltCallback
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTransfer
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[2a4]"></a>HAL_SPI_Init</STRONG> (Thumb, 418 bytes, Stack size 32 bytes, stm32u5xx_hal_spi.o(.text.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_drawImage
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_initReg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
</UL>

<P><STRONG><a name="[2a5]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 416 bytes, Stack size 264 bytes, spi.o(.text.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMAEx_ConfigRepeatBlock
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_ConfigChannelAttributes
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[2a3]"></a>HAL_SPI_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[29d]"></a>HAL_SPI_SuspendCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_spi.o(.text.HAL_SPI_SuspendCallback))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[2a7]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 732 bytes, Stack size 32 bytes, stm32u5xx_hal_spi.o(.text.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_init
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_initReg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
</UL>

<P><STRONG><a name="[2a8]"></a>HAL_SPI_Transmit_DMA</STRONG> (Thumb, 528 bytes, Stack size 24 bytes, stm32u5xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SPI_Transmit_DMA &rArr; HAL_DMAEx_List_Start_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMAEx_List_Start_IT
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_drawImage
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
</UL>

<P><STRONG><a name="[2a2]"></a>HAL_SPI_TxCpltCallback</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, st7789v.o(.text.HAL_SPI_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SPI_TxCpltCallback &rArr; HAL_SPI_Transmit_DMA &rArr; HAL_DMAEx_List_Start_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[2f7]"></a>HAL_SPI_TxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfTransmitCplt
</UL>

<P><STRONG><a name="[2a0]"></a>HAL_SPI_TxRxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[280]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, stm32u5xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2b4]"></a>HAL_TIMEx_Break2Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2b3]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2b6]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2b8]"></a>HAL_TIMEx_DirectionChangeCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_DirectionChangeCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2b7]"></a>HAL_TIMEx_EncoderIndexCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_EncoderIndexCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2b9]"></a>HAL_TIMEx_IndexErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_IndexErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2ea]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 350 bytes, Stack size 8 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[2ba]"></a>HAL_TIMEx_TransitionErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_TransitionErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[285]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[2ac]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, tim.o(.text.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[286]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2e9]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 532 bytes, Stack size 8 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_ConfigClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[2af]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2ae]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 460 bytes, Stack size 24 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_TransitionErrorCallback
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_IndexErrorCallback
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_DirectionChangeCallback
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_EncoderIndexCallback
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_Break2Callback
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_IRQHandler
</UL>

<P><STRONG><a name="[2b0]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2bb]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 660 bytes, Stack size 24 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC1_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[2c0]"></a>HAL_TIM_PWM_Init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_PWM_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[2c1]"></a>HAL_TIM_PWM_MspInit</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, tim.o(.text.HAL_TIM_PWM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_PWM_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[2b1]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2b2]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2b5]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2f1]"></a>HAL_UARTEx_DisableFifoMode</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32u5xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableFifoMode))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[2c4]"></a>HAL_UARTEx_RxEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2c7]"></a>HAL_UARTEx_RxFifoFullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_uart_ex.o(.text.HAL_UARTEx_RxFifoFullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2f0]"></a>HAL_UARTEx_SetRxFifoThreshold</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32u5xx_hal_uart_ex.o(.text.HAL_UARTEx_SetRxFifoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UARTEx_SetRxFifoThreshold
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[2ef]"></a>HAL_UARTEx_SetTxFifoThreshold</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32u5xx_hal_uart_ex.o(.text.HAL_UARTEx_SetTxFifoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UARTEx_SetTxFifoThreshold
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[2c6]"></a>HAL_UARTEx_TxFifoEmptyCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_uart_ex.o(.text.HAL_UARTEx_TxFifoEmptyCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2c8]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_uart.o(.text.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[2c3]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 1406 bytes, Stack size 16 bytes, stm32u5xx_hal_uart.o(.text.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxFifoFullCallback
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_TxFifoEmptyCallback
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[2c9]"></a>HAL_UART_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, stm32u5xx_hal_uart.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[2ca]"></a>HAL_UART_MspInit</STRONG> (Thumb, 326 bytes, Stack size 240 bytes, usart.o(.text.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_ConfigChannelAttributes
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[2c5]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_hal_uart.o(.text.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.I2C3_EV_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2cf]"></a>LCD_SetWindow</STRONG> (Thumb, 614 bytes, Stack size 40 bytes, st7789v.o(.text.LCD_SetWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = LCD_SetWindow &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_drawImage
</UL>

<P><STRONG><a name="[2d0]"></a>LCD_drawImage</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, st7789v.o(.text.LCD_drawImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = LCD_drawImage &rArr; LCD_SetWindow &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetState
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d2]"></a>LCD_init</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, st7789v.o(.text.LCD_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = LCD_init &rArr; LCD_initReg &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_initReg
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d3]"></a>LCD_initReg</STRONG> (Thumb, 3306 bytes, Stack size 40 bytes, st7789v.o(.text.LCD_initReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = LCD_initReg &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_init
</UL>

<P><STRONG><a name="[2d4]"></a>MX_ADC1_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, adc.o(.text.MX_ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = MX_ADC1_Init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d5]"></a>MX_CRC_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, crc.o(.text.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d6]"></a>MX_DMA2D_Init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, dma2d.o(.text.MX_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_ConfigLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d8]"></a>MX_FREERTOS_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_freertos.o(.text.MX_FREERTOS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = MX_FREERTOS_Init &rArr; osThreadNew &rArr; xTaskCreate &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2da]"></a>MX_GPDMA1_Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gpdma.o(.text.MX_GPDMA1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_GPDMA1_Init &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2db]"></a>MX_GPIO_Init</STRONG> (Thumb, 422 bytes, Stack size 64 bytes, gpio.o(.text.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2dc]"></a>MX_I2C2_Init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, i2c.o(.text.MX_I2C2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = MX_I2C2_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2df]"></a>MX_I2C3_Init</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, i2c.o(.text.MX_I2C3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = MX_I2C3_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigFastModePlus
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e1]"></a>MX_ICACHE_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, icache.o(.text.MX_ICACHE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MX_ICACHE_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ICACHE_Enable
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ICACHE_ConfigAssociativityMode
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e4]"></a>MX_RTC_Init</STRONG> (Thumb, 218 bytes, Stack size 64 bytes, rtc.o(.text.MX_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = MX_RTC_Init &rArr; HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_SetWakeUpTimer_IT
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_PrivilegeModeSet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e6]"></a>MX_SPI1_Init</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, spi.o(.text.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPIEx_SetConfigAutonomousMode
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e8]"></a>MX_TIM1_Init</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, tim.o(.text.MX_TIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MX_TIM1_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2eb]"></a>MX_TIM3_Init</STRONG> (Thumb, 200 bytes, Stack size 80 bytes, tim.o(.text.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = MX_TIM3_Init &rArr; HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC1_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ec]"></a>MX_TouchGFX_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_touchgfx.o(.text.MX_TouchGFX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = MX_TouchGFX_Init &rArr; touchgfx_init &rArr; touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ee]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, usart.o(.text.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_DisableFifoMode
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2f2]"></a>OLED_Clear</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, oled.o(.text.OLED_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = OLED_Clear &rArr; HAL_I2C_Master_Transmit &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[2f3]"></a>OLED_Init</STRONG> (Thumb, 580 bytes, Stack size 24 bytes, oled.o(.text.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = OLED_Init &rArr; OLED_Clear &rArr; HAL_I2C_Master_Transmit &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f4]"></a>OLED_Printf</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, oled.o(.text.OLED_Printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = OLED_Printf &rArr; OLED_ShowChar &rArr; HAL_I2C_Master_Transmit &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f5]"></a>OLED_ShowChar</STRONG> (Thumb, 650 bytes, Stack size 56 bytes, oled.o(.text.OLED_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = OLED_ShowChar &rArr; HAL_I2C_Master_Transmit &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Printf
</UL>

<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, portasm.o(.text.PendSV_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[299]"></a>RTC_ExitInitMode</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, stm32u5xx_hal_rtc.o(.text.RTC_ExitInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_ExitInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_IRQHandler &rArr; HAL_RTCEx_WakeUpTimerIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>SPI1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI1_IRQHandler &rArr; HAL_SPI_IRQHandler &rArr; HAL_SPI_TxCpltCallback &rArr; HAL_SPI_Transmit_DMA &rArr; HAL_DMAEx_List_Start_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, portasm.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>StartDefaultTask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_freertos.o(.text.StartDefaultTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = StartDefaultTask &rArr;  StartDefaultTask (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_freertos.o(.text.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cmsis_os2.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysTick_Handler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2fb]"></a>SystemClock_Config</STRONG> (Thumb, 170 bytes, Stack size 128 bytes, main.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>SystemInit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, system_stm32u5xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.TIM1_BRK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM1_BRK_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.TIM1_UP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM1_UP_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM6_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[2ad]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 654 bytes, Stack size 8 bytes, stm32u5xx_hal_tim.o(.text.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[2bd]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 298 bytes, Stack size 16 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[2cb]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, stm32u5xx_hal_uart.o(.text.UART_AdvFeatureConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[2cd]"></a>UART_CheckIdleState</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, stm32u5xx_hal_uart.o(.text.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[2cc]"></a>UART_SetConfig</STRONG> (Thumb, 522 bytes, Stack size 16 bytes, stm32u5xx_hal_uart.o(.text.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[2ff]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 818 bytes, Stack size 24 bytes, stm32u5xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[47]"></a>USART1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u575xx.o(RESET)
</UL>
<P><STRONG><a name="[305]"></a>getFont_verdana_10_4bpp()</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, table_verdana_10_4bpp.o(.text._Z23getFont_verdana_10_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = getFont_verdana_10_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[303]"></a>getFont_verdana_20_4bpp()</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, table_verdana_20_4bpp.o(.text._Z23getFont_verdana_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = getFont_verdana_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[304]"></a>getFont_verdana_40_4bpp()</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, table_verdana_40_4bpp.o(.text._Z23getFont_verdana_40_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = getFont_verdana_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[98]"></a>Screen1View::setupScreen()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1view.o(.text._ZN11Screen1View11setupScreenEv))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
</UL>
<P><STRONG><a name="[9a]"></a>Screen1View::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(.text._ZN11Screen1View14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
</UL>
<P><STRONG><a name="[309]"></a>Screen1View::Screen1View()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screen1view.o(.text._ZN11Screen1ViewC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[410]"></a>Screen1View::Screen1View__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screen1view.o(.text._ZN11Screen1ViewC2Ev), UNUSED)

<P><STRONG><a name="[96]"></a>Screen1View::~Screen1View__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, screen1view.o(.text._ZN11Screen1ViewD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Screen1View::~Screen1View__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
</UL>
<P><STRONG><a name="[a4]"></a>TouchGFXHAL::initialize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize()
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[be]"></a>TouchGFXHAL::enableInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16enableInterruptsEv))
<BR><BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[a7]"></a>TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[a6]"></a>TouchGFXHAL::flushFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferEv))
<BR><BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[bf]"></a>TouchGFXHAL::disableInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL17disableInterruptsEv))
<BR><BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ce]"></a>TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL17setTFTFrameBufferEPt))
<BR><BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[bd]"></a>TouchGFXHAL::configureInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL19configureInterruptsEv))
<BR><BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c0]"></a>TouchGFXHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL28enableLCDControllerInterruptEv))
<BR><BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ad]"></a>TouchGFXHAL::blockCopy(void*, void const*, unsigned int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::blockCopy(void*, void const*, unsigned int) &rArr; TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int) &rArr; touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[a1]"></a>TouchGFXHAL::~TouchGFXHAL__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN11TouchGFXHALD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::~TouchGFXHAL__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d4]"></a>FrontendHeap::~FrontendHeap__deallocating()</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FrontendHeap::~FrontendHeap__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[92]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text.touchgfx_init)
<LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[3b6]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bitmapdatabase.o(.text._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[3b7]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(.text._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[d7]"></a>Screen1ViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(.text._ZN15Screen1ViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[315]"></a>Screen1ViewBase::Screen1ViewBase()</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, screen1viewbase.o(.text._ZN15Screen1ViewBaseC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen__sub_object()
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[30a]"></a>Screen1ViewBase::Screen1ViewBase__sub_object()</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, screen1viewbase.o(.text._ZN15Screen1ViewBaseC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Screen1ViewBase::Screen1ViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
</UL>

<P><STRONG><a name="[d6]"></a>Screen1ViewBase::~Screen1ViewBase__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(.text._ZN15Screen1ViewBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Screen1ViewBase::~Screen1ViewBase__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[411]"></a>Screen1ViewBase::~Screen1ViewBase()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(.text._ZN15Screen1ViewBaseD2Ev), UNUSED)

<P><STRONG><a name="[95]"></a>Screen1ViewBase::~Screen1ViewBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(.text._ZN15Screen1ViewBaseD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[d5]"></a>FrontendHeapBase::gotoStartScreen(FrontendApplication&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication))
<BR><BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[da]"></a>Screen1Presenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(.text._ZN16Screen1Presenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[d9]"></a>Screen1Presenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(.text._ZN16Screen1Presenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[340]"></a>Screen1Presenter::Screen1Presenter(Screen1View&)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, screen1presenter.o(.text._ZN16Screen1PresenterC2ER11Screen1View))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[412]"></a>Screen1Presenter::Screen1Presenter__sub_object(Screen1View&)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, screen1presenter.o(.text._ZN16Screen1PresenterC2ER11Screen1View), UNUSED)

<P><STRONG><a name="[dc]"></a>Screen1Presenter::~Screen1Presenter__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1presenter.o(.text._ZN16Screen1PresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Screen1Presenter::~Screen1Presenter__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[db]"></a>Screen1Presenter::~Screen1Presenter__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(.text._ZN16Screen1PresenterD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[35c]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(.text._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[320]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, typedtextdatabase.o(.text._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::getFont(unsigned short)
</UL>

<P><STRONG><a name="[e3]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, frontendapplication.o(.text._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[31a]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplication.o(.text._ZN19FrontendApplicationC2ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[413]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplication.o(.text._ZN19FrontendApplicationC2ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[e6]"></a>FrontendApplication::~FrontendApplication__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN19FrontendApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FrontendApplication::~FrontendApplication__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[f5]"></a>STM32TouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchController11sampleTouchERiS0_))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[f4]"></a>STM32TouchController::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchController4initEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[f3]"></a>STM32TouchController::~STM32TouchController__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchControllerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STM32TouchController::~STM32TouchController__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[30c]"></a>TouchGFXGeneratedHAL::initialize()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize()
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[30d]"></a>TouchGFXGeneratedHAL::enableInterrupts()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16enableInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>

<P><STRONG><a name="[30e]"></a>TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[310]"></a>TouchGFXGeneratedHAL::disableInterrupts()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17disableInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>

<P><STRONG><a name="[311]"></a>TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>

<P><STRONG><a name="[312]"></a>TouchGFXGeneratedHAL::configureInterrupts()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL19configureInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>

<P><STRONG><a name="[313]"></a>TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableLCDControllerInterrupt()
</UL>

<P><STRONG><a name="[314]"></a>TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int) &rArr; touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::blockCopy(void*, void const*, unsigned int)
</UL>

<P><STRONG><a name="[f6]"></a>ApplicationFontProvider::getFont(unsigned short)</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, applicationfontprovider.o(.text._ZN23ApplicationFontProvider7getFontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ApplicationFontProvider::getFont(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[f8]"></a>ApplicationFontProvider::~ApplicationFontProvider__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, applicationfontprovider.o(.text._ZN23ApplicationFontProviderD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationFontProvider::~ApplicationFontProvider__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[e7]"></a>FrontendApplicationBase::changeToStartScreen()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN23FrontendApplicationBase19changeToStartScreenEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[318]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransition()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
</UL>

<P><STRONG><a name="[90]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl() &rArr; Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.text._ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv)
</UL>
<P><STRONG><a name="[322]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseC2ER5ModelR12FrontendHeap), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application__sub_object()
</UL>

<P><STRONG><a name="[31b]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseC2ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[fa]"></a>FrontendApplicationBase::~FrontendApplicationBase__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FrontendApplicationBase::~FrontendApplicationBase__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[e5]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN23FrontendApplicationBaseD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[319]"></a>Model::tick()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, model.o(.text._ZN5Model4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[3ba]"></a>Model::Model()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(.text._ZN5ModelC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[414]"></a>Model::Model__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(.text._ZN5ModelC2Ev), UNUSED)

<P><STRONG><a name="[fc]"></a>touchgfx::ClickEvent::~ClickEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx10ClickEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ClickEvent::~ClickEvent__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
</UL>
<P><STRONG><a name="[345]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[356]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers12waitForVSyncEv))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[33d]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
</UL>

<P><STRONG><a name="[33c]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[339]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[33b]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::executeCompleted()
</UL>

<P><STRONG><a name="[109]"></a>touchgfx::Transition::invalidate()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Transition::invalidate()
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[10a]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[108]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[107]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[104]"></a>touchgfx::Transition::~Transition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[ee]"></a>touchgfx::Application::invalidate()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application10invalidateEv))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[31d]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[33f]"></a>touchgfx::Application::TimerWidgets::clear()</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application12TimerWidgets5clearEv))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[326]"></a>touchgfx::Application::TimerWidgets::compact()</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application12TimerWidgets7compactEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::TimerWidgets::compact() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>

<P><STRONG><a name="[e8]"></a>touchgfx::Application::switchScreen(touchgfx::Screen*)</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::switchScreen(touchgfx::Screen*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[eb]"></a>touchgfx::Application::requestRedraw(touchgfx::Rect&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[ea]"></a>touchgfx::Application::requestRedraw()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application13requestRedrawEv))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[e2]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[ef]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 3864 bytes, Stack size 120 bytes, application.o(.text._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[e9]"></a>touchgfx::Application::appSwitchScreen(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplication.o(.text._ZN8touchgfx11Application15appSwitchScreenEh))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[ed]"></a>touchgfx::Application::drawCachedAreas()</STRONG> (Thumb, 2224 bytes, Stack size 136 bytes, application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::drawCachedAreas() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[e0]"></a>touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f9]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[ec]"></a>touchgfx::Application::clearCachedAreas()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[df]"></a>touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[e1]"></a>touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[101]"></a>touchgfx::Application::changeToStartScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application19changeToStartScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[fe]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f1]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f0]"></a>touchgfx::Application::draw()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::draw()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[329]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11ApplicationC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[323]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11ApplicationC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[100]"></a>touchgfx::Application::~Application__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11ApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::~Application__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3b8]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fontmanager.o(.text._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[f7]"></a>touchgfx::FontProvider::~FontProvider__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, applicationfontprovider.o(.text._ZN8touchgfx12FontProviderD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[102]"></a>touchgfx::GestureEvent::~GestureEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx12GestureEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GestureEvent::~GestureEvent__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[106]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[105]"></a>touchgfx::NoTransition::~NoTransition__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::NoTransition::~NoTransition__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[32c]"></a>touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
</UL>

<P><STRONG><a name="[32e]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const
</UL>

<P><STRONG><a name="[330]"></a>touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[331]"></a>touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)</STRONG> (Thumb, 520 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>

<P><STRONG><a name="[32f]"></a>touchgfx::TextProvider::fillInputBuffer()</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15fillInputBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
</UL>

<P><STRONG><a name="[332]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, texts.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>

<P><STRONG><a name="[334]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
</UL>

<P><STRONG><a name="[333]"></a>touchgfx::TextProvider::substituteGlyphs()</STRONG> (Thumb, 310 bytes, Stack size 56 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider16substituteGlyphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[335]"></a>touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)</STRONG> (Thumb, 1968 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>

<P><STRONG><a name="[32d]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, texts.o(.text._ZN8touchgfx12TextProvider18initializeInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
</UL>

<P><STRONG><a name="[336]"></a>touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[337]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProviderC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
</UL>

<P><STRONG><a name="[415]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProviderC2Ev), UNUSED)

<P><STRONG><a name="[125]"></a>touchgfx::ToggleButton::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, togglebutton.o(.text._ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::ToggleButton::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&) &rArr; touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[11c]"></a>touchgfx::ToggleButton::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, togglebutton.o(.text._ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ToggleButton::handleClickEvent(touchgfx::ClickEvent const&) &rArr; touchgfx::AbstractButton::handleClickEvent(touchgfx::ClickEvent const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::handleClickEvent(touchgfx::ClickEvent const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[10c]"></a>touchgfx::ToggleButton::~ToggleButton__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, togglebutton.o(.text._ZN8touchgfx12ToggleButtonD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ToggleButton::~ToggleButton__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[153]"></a>touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&) &rArr; touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[158]"></a>touchgfx::DMA_Interface::getDMAType()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx13DMA_Interface10getDMATypeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[155]"></a>touchgfx::DMA_Interface::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx13DMA_Interface10initializeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[160]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[161]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[15d]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[348]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[15c]"></a>touchgfx::DMA_Interface::executeCompleted()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::executeCompleted()
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[163]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[162]"></a>touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[156]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[15b]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::DMA_Interface::execute() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[307]"></a>touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)</STRONG> (Thumb, 72 bytes, Stack size 72 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontC2EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
</UL>

<P><STRONG><a name="[416]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)</STRONG> (Thumb, 72 bytes, Stack size 72 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontC2EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE), UNUSED)

<P><STRONG><a name="[127]"></a>touchgfx::GeneratedFont::~GeneratedFont__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GeneratedFont::~GeneratedFont__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[123]"></a>touchgfx::AbstractButton::executeAction()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, button.o(.text._ZN8touchgfx14AbstractButton13executeActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractButton::executeAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[338]"></a>touchgfx::AbstractButton::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, abstractbutton.o(.text._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractButton::handleClickEvent(touchgfx::ClickEvent const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::handleClickEvent(touchgfx::ClickEvent const&)
</UL>

<P><STRONG><a name="[e4]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[321]"></a>Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::clear()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::Screen1Presenter(Screen1View&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[167]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvED2Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[f2]"></a>touchgfx::TouchController::~TouchController__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(.text._ZN8touchgfx15TouchControllerD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[ff]"></a>touchgfx::UIEventListener::~UIEventListener__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx15UIEventListenerD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[342]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[343]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration6muldivEiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>

<P><STRONG><a name="[344]"></a>touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration7muldivuEjjjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[141]"></a>touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[144]"></a>touchgfx::AbstractPartition::clear()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[143]"></a>touchgfx::AbstractPartition::indexOf(void const*)</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::indexOf(void const*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[140]"></a>touchgfx::AbstractPartition::allocate(unsigned short)</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::allocate(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[3b9]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[13f]"></a>touchgfx::AbstractPartition::~AbstractPartition__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[417]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[13e]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__deallocating()
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[148]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[14b]"></a>touchgfx::LockFreeDMA_Queue::pop()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue3popEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pop() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[14c]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[147]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[146]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[301]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueC2EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[418]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueC2EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[14a]"></a>touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[328]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&) const
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(touchgfx::Rect const&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[368]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&) const
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(touchgfx::Rect const&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[392]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[327]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
</UL>

<P><STRONG><a name="[352]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[14d]"></a>touchgfx::Box::~Box__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx3BoxD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Box::~Box__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[d3]"></a>touchgfx::HAL::FlushCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL10FlushCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[cc]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL10beginFrameEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c8]"></a>touchgfx::HAL::getDMAType()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL10getDMATypeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[31c]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::initialize()
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>

<P><STRONG><a name="[ae]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b2]"></a>touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b3]"></a>touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 200 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b5]"></a>touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</STRONG> (Thumb, 350 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d2]"></a>touchgfx::HAL::InvalidateCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[bc]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[aa]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b4]"></a>touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 118 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[31e]"></a>touchgfx::HAL::flushFrameBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[30f]"></a>touchgfx::HAL::flushFrameBuffer()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer()
</UL>

<P><STRONG><a name="[347]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
</UL>

<P><STRONG><a name="[a8]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c7]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ab]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::unlockFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[a3]"></a>touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[33a]"></a>touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[c3]"></a>touchgfx::HAL::setAnimationStorage(void*)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ba]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[bb]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b9]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[a2]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b7]"></a>touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c4]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c9]"></a>touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ca]"></a>touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</STRONG> (Thumb, 726 bytes, Stack size 96 bytes, hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c2]"></a>touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d1]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::performDisplayOrientationChange()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[cb]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 404 bytes, Stack size 32 bytes, hal.o(.text._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::tick()
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[cf]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, hal.o(.text._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d0]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[af]"></a>touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 328 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b1]"></a>touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</STRONG> (Thumb, 118 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b0]"></a>touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b8]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 102 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b6]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 258 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[cd]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[a9]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[31f]"></a>touchgfx::HAL::blockCopy(void*, void const*, unsigned int)</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)
</UL>

<P><STRONG><a name="[c1]"></a>touchgfx::HAL::sampleKey(unsigned char&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL9sampleKeyERh))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c6]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL9taskDelayEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[a5]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[a0]"></a>touchgfx::HAL::~HAL__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HALD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[1bf]"></a>touchgfx::LCD::setDefaultColor(touchgfx::colortype)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1c1]"></a>touchgfx::LCD::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 200 bytes, Stack size 120 bytes, lcd.o(.text._ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::LCD::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1c3]"></a>touchgfx::LCD::drawTextureMapScanLine(touchgfx::DrawingSurface const&, touchgfx::Gradients const&, touchgfx::Edge const*, touchgfx::Edge const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 456 bytes, Stack size 80 bytes, lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD::drawTextureMapScanLine(touchgfx::DrawingSurface const&, touchgfx::Gradients const&, touchgfx::Edge const*, touchgfx::Edge const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1c0]"></a>touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 2470 bytes, Stack size 392 bytes, lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short) &rArr; touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gradients::Gradients(touchgfx::Point3D const*)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[178]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev))
<BR>[Address Reference Count : 28]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[1be]"></a>touchgfx::LCD::supportDynamicBitmapDrawing(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD::supportDynamicBitmapDrawing(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[359]"></a>touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lcd.o(.text._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[35a]"></a>touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lcd.o(.text._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[1b1]"></a>touchgfx::LCD::~LCD__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCDD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[358]"></a>touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)</STRONG> (Thumb, 572 bytes, Stack size 40 bytes, texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[419]"></a>touchgfx::Edge::Edge__sub_object(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)</STRONG> (Thumb, 572 bytes, Stack size 40 bytes, texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii), UNUSED)

<P><STRONG><a name="[126]"></a>touchgfx::Font::~Font__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cachedfont.o(.text._ZN8touchgfx4FontD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[34f]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[346]"></a>touchgfx::GPIO::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO4initEv))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[351]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[349]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>

<P><STRONG><a name="[fb]"></a>touchgfx::Event::~Event__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx5EventD2Ev))
<BR>[Address Reference Count : 3]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
<LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
<LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[152]"></a>touchgfx::NoDMA::getBlitCaps()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[15e]"></a>touchgfx::NoDMA::setupDataCopy(touchgfx::BlitOp const&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA13setupDataCopyERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::NoDMA::setupDataCopy(touchgfx::BlitOp const&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[15f]"></a>touchgfx::NoDMA::setupDataFill(touchgfx::BlitOp const&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA13setupDataFillERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::NoDMA::setupDataFill(touchgfx::BlitOp const&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[157]"></a>touchgfx::NoDMA::signalDMAInterrupt()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA18signalDMAInterruptEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[154]"></a>touchgfx::NoDMA::flush()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMA5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[15a]"></a>touchgfx::NoDMA::~NoDMA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::NoDMA::~NoDMA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[159]"></a>touchgfx::NoDMA::~NoDMA__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx5NoDMAD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx5NoDMAE)
</UL>
<P><STRONG><a name="[35b]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, texts.o(.text._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[35d]"></a>touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[34b]"></a>touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[35e]"></a>touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)</STRONG> (Thumb, 548 bytes, Stack size 32 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap8setCacheEPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[317]"></a>touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, button.o(.text._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)
</UL>

<P><STRONG><a name="[166]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[341]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[9f]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(.text._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[d8]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(.text._ZN8touchgfx6Screen14tearDownScreenEv))
<BR>[Address Reference Count : 2]<UL><LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[99]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(.text._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[9c]"></a>touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[9e]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(.text._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[9b]"></a>touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&) &rArr; touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[9d]"></a>touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[97]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(touchgfx::Rect const&) const
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[32b]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx6Screen4drawEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[360]"></a>touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)</STRONG> (Thumb, 1006 bytes, Stack size 80 bytes, screen.o(.text._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[361]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, screen.o(.text._ZN8touchgfx6ScreenC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[316]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, screen.o(.text._ZN8touchgfx6ScreenC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[165]"></a>touchgfx::Screen::~Screen__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6ScreenD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Screen::~Screen__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[164]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6ScreenD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[114]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR>[Address Reference Count : 2]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[169]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[168]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[120]"></a>touchgfx::Drawable::moveRelative(short, short)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::moveRelative(short, short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[112]"></a>touchgfx::Drawable::getFirstChild()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv))
<BR>[Address Reference Count : 2]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[122]"></a>touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 2]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[11e]"></a>touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[11f]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[151]"></a>touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 2]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[11d]"></a>touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[11b]"></a>touchgfx::Drawable::childGeometryChanged()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[113]"></a>touchgfx::Drawable::getSolidRectAbsolute()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::getSolidRectAbsolute()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[117]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[118]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[121]"></a>touchgfx::Drawable::moveTo(short, short)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable6moveToEss))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[119]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable8setWidthEs))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[11a]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable9setHeightEs))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[10b]"></a>touchgfx::Drawable::~Drawable__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8DrawableD2Ev))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[353]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, gestures.o(.text._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[354]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, gestures.o(.text._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[34a]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(.text._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[350]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gestures.o(.text._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[363]"></a>touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[1ba]"></a>touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 592 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[367]"></a>touchgfx::LCD16bpp::blitCopyRGB888(unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 560 bytes, Stack size 112 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::blitCopyRGB888(unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[369]"></a>touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 516 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKjRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[16d]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 1030 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[16f]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 1180 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[16e]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 490 bytes, Stack size 80 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned int, unsigned short, int, unsigned char) const
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[16c]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[364]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 584 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[366]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 606 bytes, Stack size 104 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[1b3]"></a>touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)</STRONG> (Thumb, 1080 bytes, Stack size 72 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&) const
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[16b]"></a>touchgfx::LCD16bpp::DecompressorL8Base::~DecompressorL8Base__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8BaseD2Ev))
<BR>[Address Reference Count : 3]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[171]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 1398 bytes, Stack size 104 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[173]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 1484 bytes, Stack size 104 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[172]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 1376 bytes, Stack size 104 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[170]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[175]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 1630 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[177]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 1890 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[176]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 1644 bytes, Stack size 136 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[174]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[365]"></a>touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 568 bytes, Stack size 112 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[36f]"></a>touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 592 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[371]"></a>touchgfx::LCD16bpp::enableTextureMapperA4()</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[324]"></a>touchgfx::LCD16bpp::enableTextureMapperAll()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[325]"></a>touchgfx::LCD16bpp::enableDecompressorL8_All()</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[376]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565()</STRONG> (Thumb, 460 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[372]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888()</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[374]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[375]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1c2]"></a>touchgfx::LCD16bpp::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)</STRONG> (Thumb, 656 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1b8]"></a>touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::copyAreaFromTFTToClientBuffer(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1b7]"></a>touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)</STRONG> (Thumb, 818 bytes, Stack size 104 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1b6]"></a>touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[373]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[17a]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1292 bytes, Stack size 80 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[179]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[17c]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1260 bytes, Stack size 84 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[17b]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[17e]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 644 bytes, Stack size 160 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[17d]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[180]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 636 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[17f]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[182]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1444 bytes, Stack size 96 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[181]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[184]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 924 bytes, Stack size 60 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[183]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[186]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1436 bytes, Stack size 92 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[185]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[188]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1336 bytes, Stack size 92 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[187]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[18a]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1572 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[189]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[18c]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1730 bytes, Stack size 80 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[18b]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[18e]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 992 bytes, Stack size 72 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[18d]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[190]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1406 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[18f]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[192]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1580 bytes, Stack size 84 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[191]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[194]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 620 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[193]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[196]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1562 bytes, Stack size 80 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[195]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[198]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1472 bytes, Stack size 84 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[197]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[19a]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1294 bytes, Stack size 168 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[199]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[19c]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 636 bytes, Stack size 160 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[19b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[19e]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 636 bytes, Stack size 160 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[19d]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[1a0]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 632 bytes, Stack size 160 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[19f]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[1a2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1614 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[1a1]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[1a4]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 620 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[1a3]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[1a6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 1482 bytes, Stack size 176 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1a5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1a8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 624 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1a7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1aa]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 620 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1a9]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1ac]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 608 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1ab]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1ae]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 636 bytes, Stack size 160 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[1ad]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[1b0]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 624 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1af]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[1b5]"></a>touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyRGB888(unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1b4]"></a>touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</STRONG> (Thumb, 554 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1b9]"></a>touchgfx::LCD16bpp::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[391]"></a>touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[1c4]"></a>touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 1402 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[393]"></a>touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[302]"></a>touchgfx::LCD16bpp::LCD16bpp()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bppC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::LCD16bpp()
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[41a]"></a>touchgfx::LCD16bpp::LCD16bpp__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bppC2Ev), UNUSED)

<P><STRONG><a name="[1b2]"></a>touchgfx::LCD16bpp::~LCD16bpp__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bppD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::~LCD16bpp__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[33e]"></a>touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, constfont.o(.text._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEttthhhhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>

<P><STRONG><a name="[1c5]"></a>touchgfx::ConstFont::~ConstFont__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, constfont.o(.text._ZN8touchgfx9ConstFontD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1d6]"></a>touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1cd]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1cc]"></a>touchgfx::Container::getFirstChild()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container13getFirstChildEv))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1ce]"></a>touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1d5]"></a>touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</STRONG> (Thumb, 670 bytes, Stack size 96 bytes, container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1d8]"></a>touchgfx::Container::moveChildrenRelative(short, short)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::moveChildrenRelative(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1cf]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1d4]"></a>touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1d0]"></a>touchgfx::Container::remove(touchgfx::Drawable&)</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1d2]"></a>touchgfx::Container::unlink()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6unlinkEv))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1d3]"></a>touchgfx::Container::contains(touchgfx::Drawable const&)</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1d1]"></a>touchgfx::Container::removeAll()</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container9removeAllEv))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1c8]"></a>touchgfx::Container::~Container__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9ContainerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::~Container__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[149]"></a>touchgfx::DMA_Queue::~DMA_Queue__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx9DMA_QueueD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1d9]"></a>touchgfx::DragEvent::~DragEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx9DragEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DragEvent::~DragEvent__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
</UL>
<P><STRONG><a name="[357]"></a>touchgfx::Gradients::Gradients(touchgfx::Point3D const*)</STRONG> (Thumb, 560 bytes, Stack size 32 bytes, texturemaptypes.o(.text._ZN8touchgfx9GradientsC2EPKNS_7Point3DE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Gradients::Gradients(touchgfx::Point3D const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[41b]"></a>touchgfx::Gradients::Gradients__sub_object(touchgfx::Point3D const*)</STRONG> (Thumb, 560 bytes, Stack size 32 bytes, texturemaptypes.o(.text._ZN8touchgfx9GradientsC2EPKNS_7Point3DE), UNUSED)

<P><STRONG><a name="[1dd]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1de]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1db]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e2]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e3]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e0]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e7]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e8]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e5]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[ac]"></a>TouchGFXHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZNK11TouchGFXHAL17getTFTFrameBufferEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[41c]"></a>TouchGFXGeneratedHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv), UNUSED)

<P><STRONG><a name="[fd]"></a>touchgfx::ClickEvent::getEventType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx10ClickEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
</UL>
<P><STRONG><a name="[103]"></a>touchgfx::GestureEvent::getEventType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx12GestureEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[137]"></a>touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[139]"></a>touchgfx::GeneratedFont::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[13d]"></a>touchgfx::GeneratedFont::getPixelData(touchgfx::GlyphNode const*) const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[13a]"></a>touchgfx::GeneratedFont::getContextualFormsTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[124]"></a>touchgfx::AbstractButton::getPressedState() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(.text._ZNK8touchgfx14AbstractButton15getPressedStateEv))
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[142]"></a>touchgfx::AbstractPartition::getAllocationCount() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[14f]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, box.o(.text._ZNK8touchgfx3Box12getSolidRectEv))
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[150]"></a>touchgfx::Box::invalidateContent() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, box.o(.text._ZNK8touchgfx3Box17invalidateContentEv))
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[14e]"></a>touchgfx::Box::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, box.o(.text._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Box::draw(touchgfx::Rect const&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[c5]"></a>touchgfx::HAL::getFlashDataReader() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[132]"></a>touchgfx::Font::getBaseline() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font11getBaselineEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[12e]"></a>touchgfx::Font::getCharWidth(unsigned short) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, font.o(.text._ZNK8touchgfx4Font12getCharWidthEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Font::getCharWidth(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1c6]"></a>touchgfx::Font::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, texts.o(.text._ZNK8touchgfx4Font12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[131]"></a>touchgfx::Font::getFontHeight() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, font.o(.text._ZNK8touchgfx4Font13getFontHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[13c]"></a>touchgfx::Font::getScaleFactor() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font14getScaleFactorEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[12c]"></a>touchgfx::Font::getStringWidth(unsigned short const*, ...) const</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned short const*, ...) const &rArr; touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[12d]"></a>touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const &rArr; touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[135]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[136]"></a>touchgfx::Font::getByteAlignRow() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[12b]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[12a]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[12f]"></a>touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</STRONG> (Thumb, 168 bytes, Stack size 152 bytes, font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[130]"></a>touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</STRONG> (Thumb, 180 bytes, Stack size 152 bytes, font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[138]"></a>touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</STRONG> (Thumb, 96 bytes, Stack size 144 bytes, font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[394]"></a>touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const</STRONG> (Thumb, 212 bytes, Stack size 152 bytes, font.o(.text._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned short const*, ...) const
</UL>

<P><STRONG><a name="[13b]"></a>touchgfx::Font::isVectorBasedFont() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font17isVectorBasedFontEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[133]"></a>touchgfx::Font::getMinimumTextHeight() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, font.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1c7]"></a>touchgfx::Font::getContextualFormsTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, texts.o(.text._ZNK8touchgfx4Font23getContextualFormsTableEv))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[129]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, cachedfont.o(.text._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[134]"></a>touchgfx::Font::getHeight() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cachedfont.o(.text._ZNK8touchgfx4Font9getHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[36c]"></a>touchgfx::Bitmap::getExtraData() const</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap12getExtraDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getExtraData() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[36e]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::getSolidRect() const
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[36d]"></a>touchgfx::Bitmap::hasTransparentPixels() const</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap20hasTransparentPixelsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::hasTransparentPixels() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[36b]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getData() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[34c]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getWidth() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(touchgfx::Rect const&) const
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)
</UL>

<P><STRONG><a name="[34e]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getFormat() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[34d]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(touchgfx::Rect const&) const
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)
</UL>

<P><STRONG><a name="[10e]"></a>touchgfx::Button::getSolidRect() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, button.o(.text._ZNK8touchgfx6Button12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[111]"></a>touchgfx::Button::invalidateContent() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, button.o(.text._ZNK8touchgfx6Button17invalidateContentEv))
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[10d]"></a>touchgfx::Button::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, button.o(.text._ZNK8touchgfx6Button4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::draw(touchgfx::Rect const&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[16a]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, frontendapplicationbase.o(.text._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[110]"></a>touchgfx::Drawable::invalidate() const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::invalidate() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[115]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[10f]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[35f]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drawable.o(.text._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[1cb]"></a>touchgfx::Drawable::invalidateContent() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, container.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[116]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 3]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> togglebutton.o(.rodata._ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[36a]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned int, unsigned short, int, unsigned char) const</STRONG> (Thumb, 180 bytes, Stack size 20 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Ejtih))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned int, unsigned short, int, unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[1bc]"></a>touchgfx::LCD16bpp::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1bd]"></a>touchgfx::LCD16bpp::framebufferStride() const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::framebufferStride() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[370]"></a>touchgfx::LCD16bpp::blitCopyARGB8888Solid(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&) const</STRONG> (Thumb, 412 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKjRKNS_4RectES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888Solid(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[377]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA10writePixelEPtPKtjshhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[378]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 486 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[379]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char) const</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA10writePixelEPtPKtjshh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[37a]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 428 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[37b]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA10writePixelEPtPKtsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[37c]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 390 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[37d]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[37e]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA10writePixelEPtPKhPKtsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[37f]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 406 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[380]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 370 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[381]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 462 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[382]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 802 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKtPKhsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[383]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 780 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[384]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 626 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[385]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 636 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[386]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[387]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA10writePixelEPtPKhS4_siihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[388]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 372 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[389]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 778 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[38a]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 776 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[38b]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 648 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[38c]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 620 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[38d]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 638 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[38e]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 648 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[38f]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 618 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[390]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 596 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[1bb]"></a>touchgfx::LCD16bpp::bitDepth() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp8bitDepthEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[395]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, constfont.o(.text._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const
</UL>

<P><STRONG><a name="[128]"></a>touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1ca]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, container.o(.text._ZNK8touchgfx9Container12getSolidRectEv))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1d7]"></a>touchgfx::Container::getContainedArea() const</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getContainedArea() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1c9]"></a>touchgfx::Container::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Container::draw(touchgfx::Rect const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1da]"></a>touchgfx::DragEvent::getEventType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx9DragEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
</UL>
<P><STRONG><a name="[1df]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1dc]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e4]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e1]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e9]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1e6]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[de]"></a>non-virtual thunk to Screen1Presenter::~Screen1Presenter__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1presenter.o(.text._ZThn4_N16Screen1PresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = non-virtual thunk to Screen1Presenter::~Screen1Presenter__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[dd]"></a>non-virtual thunk to Screen1Presenter::~Screen1Presenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(.text._ZThn4_N16Screen1PresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[30b]"></a>operator delete(void*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__deallocating()
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoDMA::~NoDMA__deallocating()
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__deallocating()
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__deallocating()
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__deallocating()
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__deallocating()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__deallocating()
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__deallocating()
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View__deallocating()
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to Screen1Presenter::~Screen1Presenter__deallocating()
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::~Screen1Presenter__deallocating()
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__deallocating()
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container__deallocating()
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__deallocating()
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::~Application__deallocating()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::~LCD16bpp__deallocating()
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9__deallocating()
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE__deallocating()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4__deallocating()
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__deallocating()
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::~ToggleButton__deallocating()
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DragEvent::~DragEvent__deallocating()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::~Screen__deallocating()
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GestureEvent::~GestureEvent__deallocating()
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::~ClickEvent__deallocating()
</UL>

<P><STRONG><a name="[145]"></a>__cxa_pure_virtual</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cxa_virtual.cpp.o(.text.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __cxa_pure_virtual &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[396]"></a>abort_message</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abort_message.cpp.o(.text.abort_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[224]"></a>main</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = main &rArr; LCD_drawImage &rArr; LCD_SetWindow &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_drawImage
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Printf
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ICACHE_Init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPDMA1_Init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_DisableUCPDDeadBattery
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableVddIO2
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2f8]"></a>osDelay</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, cmsis_os2.o(.text.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
</UL>

<P><STRONG><a name="[39a]"></a>osKernelInitialize</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, cmsis_os2.o(.text.osKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelInitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39b]"></a>osKernelStart</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, cmsis_os2.o(.text.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d9]"></a>osThreadNew</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, cmsis_os2.o(.text.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = osThreadNew &rArr; xTaskCreate &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
</UL>

<P><STRONG><a name="[3b5]"></a>pvPortMalloc</STRONG> (Thumb, 414 bytes, Stack size 16 bytes, heap_4.o(.text.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[3ac]"></a>pxPortInitialiseStack</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, port.o(.text.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[2ed]"></a>touchgfx_init</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text.touchgfx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx_init &rArr; touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[3a9]"></a>ulSetInterruptMask</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, portasm.o(.text.ulSetInterruptMask))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSVCHandler_C
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskExitError
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
</UL>

<P><STRONG><a name="[306]"></a>__cxa_guard_acquire</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, cxa_guard.cpp.o(.text.unlikely.__cxa_guard_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
</UL>

<P><STRONG><a name="[308]"></a>__cxa_guard_release</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cxa_guard.cpp.o(.text.unlikely.__cxa_guard_release))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
</UL>

<P><STRONG><a name="[3a1]"></a>uxListRemove</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, list.o(.text.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
</UL>

<P><STRONG><a name="[3c0]"></a>vApplicationGetIdleTaskMemory</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cmsis_os2.o(.text.vApplicationGetIdleTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[3c9]"></a>vApplicationGetTimerTaskMemory</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cmsis_os2.o(.text.vApplicationGetTimerTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[3bb]"></a>vClearInterruptMask</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, portasm.o(.text.vClearInterruptMask))
<BR><BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[3a5]"></a>vListInitialise</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, list.o(.text.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>

<P><STRONG><a name="[3ab]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(.text.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[3a2]"></a>vListInsert</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, list.o(.text.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[3a4]"></a>vPortEnterCritical</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, port.o(.text.vPortEnterCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortEnterCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[3a6]"></a>vPortExitCritical</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(.text.vPortExitCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMask
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[3a8]"></a>vPortFree</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, heap_4.o(.text.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[8f]"></a>vPortSVCHandler_C</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, port.o(.text.vPortSVCHandler_C))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortSVCHandler_C
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRestoreContextOfFirstTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> portasm.o(.text.SVC_Handler)
</UL>
<P><STRONG><a name="[3c3]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, port.o(.text.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[3a7]"></a>vPortYield</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, port.o(.text.vPortYield))
<BR><BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[3bd]"></a>vQueueAddToRegistry</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, queue.o(.text.vQueueAddToRegistry))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vQueueAddToRegistry
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[3b0]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, queue.o(.text.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[3bc]"></a>vRestoreContextOfFirstTask</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, portasm.o(.text.vRestoreContextOfFirstTask))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSVCHandler_C
</UL>

<P><STRONG><a name="[3c4]"></a>vStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, portasm.o(.text.vStartFirstTask))
<BR><BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[39c]"></a>vTaskDelay</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tasks.o(.text.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[3c7]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(.text.vTaskInternalSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[3b4]"></a>vTaskMissedYield</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(.text.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[3bf]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tasks.o(.text.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[3be]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, tasks.o(.text.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[39d]"></a>vTaskStartScheduler</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, tasks.o(.text.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetIdleTaskMemory
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[3ad]"></a>vTaskSuspendAll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tasks.o(.text.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[1ec]"></a>vTaskSwitchContext</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, tasks.o(.text.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[3c2]"></a>xPortStartScheduler</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, port.o(.text.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortStartScheduler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStartFirstTask
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[2fa]"></a>xPortSysTickHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, port.o(.text.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMask
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3c6]"></a>xQueueGenericCreateStatic</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, queue.o(.text.xQueueGenericCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericCreateStatic &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[3b1]"></a>xQueueReceive</STRONG> (Thumb, 470 bytes, Stack size 48 bytes, queue.o(.text.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[3c8]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, tasks.o(.text.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskCheckForTimeOut &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[39f]"></a>xTaskCreate</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, tasks.o(.text.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = xTaskCreate &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[39e]"></a>xTaskCreateStatic</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, tasks.o(.text.xTaskCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[2f9]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tasks.o(.text.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[3ae]"></a>xTaskGetTickCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(.text.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[3c5]"></a>xTaskIncrementTick</STRONG> (Thumb, 370 bytes, Stack size 32 bytes, tasks.o(.text.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[3b3]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, tasks.o(.text.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[3af]"></a>xTaskResumeAll</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, tasks.o(.text.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[3c1]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, timers.o(.text.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetTimerTaskMemory
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[251]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3cb]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[3ca]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[3cc]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[3cd]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[252]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[253]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3ce]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[255]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[246]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[21b]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[88]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[214]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[41d]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[41e]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[1f6]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[1fa]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[276]"></a>I2C_IsErrorOccurred</STRONG> (Thumb, 352 bytes, Stack size 16 bytes, stm32u5xx_hal_i2c.o(.text.I2C_IsErrorOccurred))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
</UL>

<P><STRONG><a name="[277]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, stm32u5xx_hal_i2c.o(.text.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>

<P><STRONG><a name="[278]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, stm32u5xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>

<P><STRONG><a name="[279]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, stm32u5xx_hal_i2c.o(.text.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Transmit
</UL>

<P><STRONG><a name="[28f]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, stm32u5xx_hal_rcc_ex.o(.text.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[290]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, stm32u5xx_hal_rcc_ex.o(.text.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[29e]"></a>SPI_CloseTransfer</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, stm32u5xx_hal_spi.o(.text.SPI_CloseTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
</UL>

<P><STRONG><a name="[8a]"></a>SPI_DMATransmitCplt</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32u5xx_hal_spi.o(.text.SPI_DMATransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_DMATransmitCplt &rArr; HAL_SPI_TxCpltCallback &rArr; HAL_SPI_Transmit_DMA &rArr; HAL_DMAEx_List_Start_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[8b]"></a>SPI_DMAHalfTransmitCplt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32u5xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt))
<BR><BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[8c]"></a>SPI_DMAError</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32u5xx_hal_spi.o(.text.SPI_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetError
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[89]"></a>SPI_DMAAbortOnError</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32u5xx_hal_spi.o(.text.SPI_DMAAbortOnError))
<BR><BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_spi.o(.text.HAL_SPI_IRQHandler)
</UL>
<P><STRONG><a name="[2bc]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 360 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[2be]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 298 bytes, Stack size 16 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[2bf]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 298 bytes, Stack size 16 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[8d]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32u5xx_hal_uart.o(.text.UART_DMAAbortOnError))
<BR><BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_uart.o(.text.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[1ea]"></a>_GLOBAL__sub_I_TouchGFXConfiguration.cpp</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text._GLOBAL__sub_I_TouchGFXConfiguration.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _GLOBAL__sub_I_TouchGFXConfiguration.cpp &rArr; touchgfx::LCD16bpp::LCD16bpp()
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[3b2]"></a>prvUnlockQueue</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, queue.o(.text.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[3aa]"></a>prvInitialiseNewTask</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, tasks.o(.text.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>

<P><STRONG><a name="[3a3]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 678 bytes, Stack size 32 bytes, tasks.o(.text.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvAddNewTaskToReadyList &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>

<P><STRONG><a name="[3a0]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, tasks.o(.text.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[93]"></a>prvIdleTask</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, tasks.o(.text.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[94]"></a>prvTimerTask</STRONG> (Thumb, 786 bytes, Stack size 16 bytes, timers.o(.text.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = prvTimerTask &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[91]"></a>prvTaskExitError</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, port.o(.text.prvTaskExitError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvTaskExitError
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> port.o(.text.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[1eb]"></a>_GLOBAL__sub_I_typedtextdatabase.cpp</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, typedtextdatabase.o(.text._GLOBAL__sub_I_typedtextdatabase.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _GLOBAL__sub_I_typedtextdatabase.cpp &rArr; getFont_verdana_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[87]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[24f]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
